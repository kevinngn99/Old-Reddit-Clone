{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/kevin/Documents/RedditClone/client/src/pages/index.tsx\";\nimport NavBar from \"../components/NavBar\";\nimport { withUrqlClient } from \"next-urql\";\nimport { createUrqlClient } from \"../utils/createUrqlClient\";\nimport { useQuery } from \"urql\";\nconst POSTS_QUERY = `\n{\n  posts {\n    id\n    title\n    updatedAt\n    createdAt\n  }\n}\n`;\n\nconst Index = () => {\n  const [{\n    data\n  }] = useQuery({\n    query: POSTS_QUERY\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), !data ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 16\n    }, this) : data.posts.map(p => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", p.title, \" \"]\n    }, p.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 62\n    }, this))]\n  }, void 0, true);\n};\n\nexport default withUrqlClient(createUrqlClient)(Index);","map":{"version":3,"sources":["/home/kevin/Documents/RedditClone/client/src/pages/index.tsx"],"names":["NavBar","withUrqlClient","createUrqlClient","useQuery","POSTS_QUERY","Index","data","query","posts","map","p","title","id"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,SAASC,gBAAT,QAAiC,2BAAjC;AACA,SAASC,QAAT,QAAyB,MAAzB;AAEA,MAAMC,WAAW,GAAI;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;;AAWA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAM,CAAC;AAAEC,IAAAA;AAAF,GAAD,IAAaH,QAAQ,CAAC;AAAEI,IAAAA,KAAK,EAAEH;AAAT,GAAD,CAA3B;AAEA,sBACE;AAAA,4BACE;AAAA,6BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,EAKG,CAACE,IAAD,gBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR,GAAgCA,IAAI,CAACE,KAAL,CAAWC,GAAX,CAAgBC,CAAD,iBAAO;AAAA,sBAAkBA,CAAC,CAACC,KAApB;AAAA,OAAUD,CAAC,CAACE,EAAZ;AAAA;AAAA;AAAA;AAAA,YAAtB,CALnC;AAAA,kBADF;AASD,CAZD;;AAcA,eAAeX,cAAc,CAACC,gBAAD,CAAd,CAAiCG,KAAjC,CAAf","sourcesContent":["import NavBar from \"../components/NavBar\";\nimport { withUrqlClient } from \"next-urql\";\nimport { createUrqlClient } from \"../utils/createUrqlClient\";\nimport { useQuery } from \"urql\";\n\nconst POSTS_QUERY = `\n{\n  posts {\n    id\n    title\n    updatedAt\n    createdAt\n  }\n}\n`;\n\nconst Index = () => {\n  const [{ data }] = useQuery({ query: POSTS_QUERY });\n\n  return (\n    <>\n      <div>\n        <NavBar />\n      </div>\n\n      {!data ? <div>Loading...</div> : data.posts.map((p) => <div key={p.id}> {p.title} </div>)}\n    </>\n  );\n};\n\nexport default withUrqlClient(createUrqlClient)(Index);\n"]},"metadata":{},"sourceType":"module"}