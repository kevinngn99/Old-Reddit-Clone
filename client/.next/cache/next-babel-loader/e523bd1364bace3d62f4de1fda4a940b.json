{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/kevin/Documents/Other/RedditClone/client/src/pages/forgot-password.tsx\";\nimport { Box, Button } from \"@chakra-ui/react\";\nimport { Formik, Form } from \"formik\";\nimport { withUrqlClient } from \"next-urql\";\nimport { useRouter } from \"next/router\";\nimport React, { useState } from \"react\";\nimport { useMutation } from \"urql\";\nimport { InputField } from \"../components/InputField\";\nimport { Wrapper } from \"../components/Wrapper\";\nimport { createUrqlClient } from \"../utils/createUrqlClient\";\nconst FORGOT_PASSWORD_MUTATION = `\nmutation ForgotPassword($email: String!) {\n  forgotPassword(email: $email)\n}\n`;\n\nconst ForgotPassword = ({}) => {\n  const router = useRouter();\n  const [, forgotPassword] = useMutation(FORGOT_PASSWORD_MUTATION);\n  const {\n    0: reset,\n    1: setReset\n  } = useState(false);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    variant: \"small\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        usernameOrEmail: \"\",\n        password: \"\"\n      },\n      onSubmit: async (values, {\n        setErrors\n      }) => {\n        await forgotPassword(values);\n        setReset(true);\n      },\n      children: ({\n        isSubmitting\n      }) => reset ? /*#__PURE__*/_jsxDEV(Box, {\n        children: \"A link has been sent to reset your password.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(InputField, {\n          name: \"email\",\n          placeholder: \"email\",\n          label: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          mt: 4,\n          type: \"submit\",\n          colorScheme: \"teal\",\n          isLoading: isSubmitting,\n          children: \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\nexport default withUrqlClient(createUrqlClient)(ForgotPassword);","map":{"version":3,"sources":["/home/kevin/Documents/Other/RedditClone/client/src/pages/forgot-password.tsx"],"names":["Box","Button","Formik","Form","withUrqlClient","useRouter","React","useState","useMutation","InputField","Wrapper","createUrqlClient","FORGOT_PASSWORD_MUTATION","ForgotPassword","router","forgotPassword","reset","setReset","usernameOrEmail","password","values","setErrors","isSubmitting"],"mappings":";;AAAA,SAASA,GAAT,EAA0BC,MAA1B,QAAwC,kBAAxC;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,QAA7B;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,MAA5B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,gBAAT,QAAiC,2BAAjC;AAEA,MAAMC,wBAAwB,GAAI;AAClC;AACA;AACA;AACA,CAJA;;AAMA,MAAMC,cAA4B,GAAG,CAAC,EAAD,KAAQ;AAC3C,QAAMC,MAAM,GAAGT,SAAS,EAAxB;AACA,QAAM,GAAGU,cAAH,IAAqBP,WAAW,CAACI,wBAAD,CAAtC;AACA,QAAM;AAAA,OAACI,KAAD;AAAA,OAAQC;AAAR,MAAoBV,QAAQ,CAAC,KAAD,CAAlC;AAEA,sBACE,QAAC,OAAD;AAAS,IAAA,OAAO,EAAC,OAAjB;AAAA,2BACE,QAAC,MAAD;AACE,MAAA,aAAa,EAAE;AAAEW,QAAAA,eAAe,EAAE,EAAnB;AAAuBC,QAAAA,QAAQ,EAAE;AAAjC,OADjB;AAEE,MAAA,QAAQ,EAAE,OAAOC,MAAP,EAAe;AAAEC,QAAAA;AAAF,OAAf,KAAiC;AACzC,cAAMN,cAAc,CAACK,MAAD,CAApB;AACAH,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,OALH;AAAA,gBAOG,CAAC;AAAEK,QAAAA;AAAF,OAAD,KACCN,KAAK,gBACH,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADG,gBAGH,QAAC,IAAD;AAAA,gCACE,QAAC,UAAD;AAAY,UAAA,IAAI,EAAC,OAAjB;AAAyB,UAAA,WAAW,EAAC,OAArC;AAA6C,UAAA,KAAK,EAAC;AAAnD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,MAAD;AACE,UAAA,EAAE,EAAE,CADN;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,WAAW,EAAC,MAHd;AAIE,UAAA,SAAS,EAAEM,YAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAXN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CAlCD;;AAoCA,eAAelB,cAAc,CAACO,gBAAD,CAAd,CAAiCE,cAAjC,CAAf","sourcesContent":["import { Box, Flex, Link, Button } from \"@chakra-ui/react\";\nimport { Formik, Form } from \"formik\";\nimport { withUrqlClient } from \"next-urql\";\nimport { useRouter } from \"next/router\";\nimport React, { useState } from \"react\";\nimport { useMutation } from \"urql\";\nimport { InputField } from \"../components/InputField\";\nimport { Wrapper } from \"../components/Wrapper\";\nimport { createUrqlClient } from \"../utils/createUrqlClient\";\n\nconst FORGOT_PASSWORD_MUTATION = `\nmutation ForgotPassword($email: String!) {\n  forgotPassword(email: $email)\n}\n`;\n\nconst ForgotPassword: React.FC<{}> = ({}) => {\n  const router = useRouter();\n  const [, forgotPassword] = useMutation(FORGOT_PASSWORD_MUTATION);\n  const [reset, setReset] = useState(false);\n\n  return (\n    <Wrapper variant=\"small\">\n      <Formik\n        initialValues={{ usernameOrEmail: \"\", password: \"\" }}\n        onSubmit={async (values, { setErrors }) => {\n          await forgotPassword(values);\n          setReset(true);\n        }}\n      >\n        {({ isSubmitting }) =>\n          reset ? (\n            <Box>A link has been sent to reset your password.</Box>\n          ) : (\n            <Form>\n              <InputField name=\"email\" placeholder=\"email\" label=\"Email\" />\n              <Button\n                mt={4}\n                type=\"submit\"\n                colorScheme=\"teal\"\n                isLoading={isSubmitting}\n              >\n                Reset Password\n              </Button>\n            </Form>\n          )\n        }\n      </Formik>\n    </Wrapper>\n  );\n};\n\nexport default withUrqlClient(createUrqlClient)(ForgotPassword);\n"]},"metadata":{},"sourceType":"module"}