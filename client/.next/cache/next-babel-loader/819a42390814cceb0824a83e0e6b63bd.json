{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/kevin/Documents/RedditClone/client/src/components/InputField.tsx\";\nimport { FormControl, FormErrorMessage, FormLabel, Input } from \"@chakra-ui/react\";\nimport { useField } from \"formik\";\nimport React from \"react\";\nexport const InputField = props => {\n  const [field, {\n    error\n  }] = useField(props);\n  return /*#__PURE__*/_jsxDEV(FormControl, {\n    isInvalid: !!error,\n    children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n      children: [\" \", props.label]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      type: props.type,\n      id: field.name,\n      placeholder: props.placeholder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), error ? /*#__PURE__*/_jsxDEV(FormErrorMessage, {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 16\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["/home/kevin/Documents/RedditClone/client/src/components/InputField.tsx"],"names":["FormControl","FormErrorMessage","FormLabel","Input","useField","React","InputField","props","field","error","label","type","name","placeholder"],"mappings":";;AAAA,SACEA,WADF,EAEEC,gBAFF,EAGEC,SAHF,EAIEC,KAJF,QAKO,kBALP;AAMA,SAASC,QAAT,QAAyB,QAAzB;AACA,OAAOC,KAAP,MAA2C,OAA3C;AAQA,OAAO,MAAMC,UAAqC,GAAIC,KAAD,IAAW;AAC9D,QAAM,CAACC,KAAD,EAAQ;AAAEC,IAAAA;AAAF,GAAR,IAAqBL,QAAQ,CAACG,KAAD,CAAnC;AAEA,sBACE,QAAC,WAAD;AAAa,IAAA,SAAS,EAAE,CAAC,CAACE,KAA1B;AAAA,4BACE,QAAC,SAAD;AAAA,sBAAaF,KAAK,CAACG,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEH,KAAK,CAACI,IAAnB;AAAyB,MAAA,EAAE,EAAEH,KAAK,CAACI,IAAnC;AAAyC,MAAA,WAAW,EAAEL,KAAK,CAACM;AAA5D;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGJ,KAAK,gBAAG,QAAC,gBAAD;AAAA,gBAAmBA;AAAnB;AAAA;AAAA;AAAA;AAAA,YAAH,GAAkD,IAH1D;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAVM","sourcesContent":["import {\n  FormControl,\n  FormErrorMessage,\n  FormLabel,\n  Input,\n} from \"@chakra-ui/react\";\nimport { useField } from \"formik\";\nimport React, { InputHTMLAttributes } from \"react\";\n\ntype InputFieldProps = InputHTMLAttributes<HTMLInputElement> & {\n  name: string;\n  label: string;\n  placeholder: string;\n};\n\nexport const InputField: React.FC<InputFieldProps> = (props) => {\n  const [field, { error }] = useField(props);\n\n  return (\n    <FormControl isInvalid={!!error}>\n      <FormLabel> {props.label}</FormLabel>\n      <Input type={props.type} id={field.name} placeholder={props.placeholder} />\n      {error ? <FormErrorMessage>{error}</FormErrorMessage> : null}\n    </FormControl>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}