{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/esm/objectDestructuringEmpty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/kevin/Documents/Other/RedditClone/client/src/pages/forgot-password.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Button } from \"@chakra-ui/react\";\nimport { Formik, Form } from \"formik\";\nimport { withUrqlClient } from \"next-urql\";\nimport { useRouter } from \"next/router\";\nimport React from \"react\";\nimport { useMutation } from \"urql\";\nimport { InputField } from \"../components/InputField\";\nimport { Wrapper } from \"../components/Wrapper\";\nimport { createUrqlClient } from \"../utils/createUrqlClient\";\n\nvar ForgotPassword = function ForgotPassword(_ref) {\n  _s();\n\n  _objectDestructuringEmpty(_ref);\n\n  var router = useRouter();\n\n  var _useMutation = useMutation(LOGIN_MUTATION),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      login = _useMutation2[1];\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    variant: \"small\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        usernameOrEmail: \"\",\n        password: \"\"\n      },\n      onSubmit: /*#__PURE__*/function () {\n        var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, _ref2) {\n          var _response$data, _response$data2;\n\n          var setErrors, response, errorMap;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  setErrors = _ref2.setErrors;\n                  _context.next = 3;\n                  return login(values);\n\n                case 3:\n                  response = _context.sent;\n\n                  if ((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.login.errors) {\n                    errorMap = {};\n                    response.data.login.errors.forEach(function (_ref4) {\n                      var field = _ref4.field,\n                          message = _ref4.message;\n                      errorMap[field] = message;\n                    });\n                    setErrors(errorMap);\n                  } else if ((_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.login.user) {\n                    router.push(\"/\");\n                  }\n\n                case 5:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x, _x2) {\n          return _ref3.apply(this, arguments);\n        };\n      }(),\n      children: function children(_ref5) {\n        var isSubmitting = _ref5.isSubmitting;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(InputField, {\n            name: \"email\",\n            placeholder: \"email\",\n            label: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Button, {\n            mt: 4,\n            type: \"submit\",\n            colorScheme: \"teal\",\n            isLoading: isSubmitting,\n            children: \"Reset Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(ForgotPassword, \"q9MASCuW0N4Gqc56A9VxEfrRGWU=\", false, function () {\n  return [useRouter, useMutation];\n});\n\n_c = ForgotPassword;\nexport default withUrqlClient(createUrqlClient)(ForgotPassword);\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"sources":["/home/kevin/Documents/Other/RedditClone/client/src/pages/forgot-password.tsx"],"names":["Button","Formik","Form","withUrqlClient","useRouter","React","useMutation","InputField","Wrapper","createUrqlClient","ForgotPassword","router","LOGIN_MUTATION","login","usernameOrEmail","password","values","setErrors","response","data","errors","errorMap","forEach","field","message","user","push","isSubmitting"],"mappings":";;;;;;;;;;AAAA,SAA0BA,MAA1B,QAAwC,kBAAxC;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,QAA7B;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,MAA5B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,gBAAT,QAAiC,2BAAjC;;AAEA,IAAMC,cAA4B,GAAG,SAA/BA,cAA+B,OAAQ;AAAA;;AAAA;;AAC3C,MAAMC,MAAM,GAAGP,SAAS,EAAxB;;AAD2C,qBAEzBE,WAAW,CAACM,cAAD,CAFc;AAAA;AAAA,MAElCC,KAFkC;;AAI3C,sBACE,QAAC,OAAD;AAAS,IAAA,OAAO,EAAC,OAAjB;AAAA,2BACE,QAAC,MAAD;AACE,MAAA,aAAa,EAAE;AAAEC,QAAAA,eAAe,EAAE,EAAnB;AAAuBC,QAAAA,QAAQ,EAAE;AAAjC,OADjB;AAEE,MAAA,QAAQ;AAAA,6EAAE,iBAAOC,MAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiBC,kBAAAA,SAAjB,SAAiBA,SAAjB;AAAA;AAAA,yBACeJ,KAAK,CAACG,MAAD,CADpB;;AAAA;AACFE,kBAAAA,QADE;;AAER,wCAAIA,QAAQ,CAACC,IAAb,mDAAI,eAAeN,KAAf,CAAqBO,MAAzB,EAAiC;AACzBC,oBAAAA,QADyB,GACU,EADV;AAG/BH,oBAAAA,QAAQ,CAACC,IAAT,CAAcN,KAAd,CAAoBO,MAApB,CAA2BE,OAA3B,CAAmC,iBAAwB;AAAA,0BAArBC,KAAqB,SAArBA,KAAqB;AAAA,0BAAdC,OAAc,SAAdA,OAAc;AACzDH,sBAAAA,QAAQ,CAACE,KAAD,CAAR,GAAkBC,OAAlB;AACD,qBAFD;AAIAP,oBAAAA,SAAS,CAACI,QAAD,CAAT;AACD,mBARD,MAQO,uBAAIH,QAAQ,CAACC,IAAb,oDAAI,gBAAeN,KAAf,CAAqBY,IAAzB,EAA+B;AACpCd,oBAAAA,MAAM,CAACe,IAAP,CAAY,GAAZ;AACD;;AAZO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAF;;AAAA;AAAA;AAAA;AAAA,SAFV;AAAA,gBAiBG;AAAA,YAAGC,YAAH,SAAGA,YAAH;AAAA,4BACC,QAAC,IAAD;AAAA,kCACE,QAAC,UAAD;AACE,YAAA,IAAI,EAAC,OADP;AAEE,YAAA,WAAW,EAAC,OAFd;AAGE,YAAA,KAAK,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA,mBADF,eAME,QAAC,MAAD;AACE,YAAA,EAAE,EAAE,CADN;AAEE,YAAA,IAAI,EAAC,QAFP;AAGE,YAAA,WAAW,EAAC,MAHd;AAIE,YAAA,SAAS,EAAEA,YAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBANF;AAAA;AAAA;AAAA;AAAA;AAAA,iBADD;AAAA;AAjBH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAuCD,CA3CD;;GAAMjB,c;UACWN,S,EACGE,W;;;KAFdI,c;AA6CN,eAAeP,cAAc,CAACM,gBAAD,CAAd,CAAiCC,cAAjC,CAAf","sourcesContent":["import { Box, Flex, Link, Button } from \"@chakra-ui/react\";\nimport { Formik, Form } from \"formik\";\nimport { withUrqlClient } from \"next-urql\";\nimport { useRouter } from \"next/router\";\nimport React from \"react\";\nimport { useMutation } from \"urql\";\nimport { InputField } from \"../components/InputField\";\nimport { Wrapper } from \"../components/Wrapper\";\nimport { createUrqlClient } from \"../utils/createUrqlClient\";\n\nconst ForgotPassword: React.FC<{}> = ({}) => {\n  const router = useRouter();\n  const [, login] = useMutation(LOGIN_MUTATION);\n\n  return (\n    <Wrapper variant=\"small\">\n      <Formik\n        initialValues={{ usernameOrEmail: \"\", password: \"\" }}\n        onSubmit={async (values, { setErrors }) => {\n          const response = await login(values);\n          if (response.data?.login.errors) {\n            const errorMap: Record<string, string> = {};\n\n            response.data.login.errors.forEach(({ field, message }) => {\n              errorMap[field] = message;\n            });\n\n            setErrors(errorMap);\n          } else if (response.data?.login.user) {\n            router.push(\"/\");\n          }\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <InputField\n              name=\"email\"\n              placeholder=\"email\"\n              label=\"Email\"\n            />\n            <Button\n              mt={4}\n              type=\"submit\"\n              colorScheme=\"teal\"\n              isLoading={isSubmitting}\n            >\n              Reset Password\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </Wrapper>\n  );\n};\n\nexport default withUrqlClient(createUrqlClient)(ForgotPassword);\n"]},"metadata":{},"sourceType":"module"}