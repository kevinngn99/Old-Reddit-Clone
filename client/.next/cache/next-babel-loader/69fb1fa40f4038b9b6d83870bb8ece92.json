{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/esm/objectDestructuringEmpty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/kevin/Documents/Other/RedditClone/client/src/pages/login.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Button, Flex, Link } from \"@chakra-ui/react\";\nimport { Form, Formik } from \"formik\";\nimport { withUrqlClient } from \"next-urql\";\nimport { useRouter } from \"next/router\";\nimport React from \"react\";\nimport { useMutation } from \"urql\";\nimport { InputField } from \"../components/InputField\";\nimport { Wrapper } from \"../components/Wrapper\";\nimport { createUrqlClient } from \"../utils/createUrqlClient\";\nimport NextLink from \"next/link\";\nvar LOGIN_MUTATION = \"\\nmutation Login($usernameOrEmail: String!, $password: String!) {\\n  login(usernameOrEmail: $usernameOrEmail, password: $password) {\\n    errors {\\n      field\\n      message\\n    }\\n    user {\\n      id\\n      username\\n    }\\n  }\\n}\\n\";\n\nvar Login = function Login(_ref) {\n  _s();\n\n  _objectDestructuringEmpty(_ref);\n\n  var router = useRouter();\n\n  var _useMutation = useMutation(LOGIN_MUTATION),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      login = _useMutation2[1];\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    variant: \"small\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        usernameOrEmail: \"\",\n        password: \"\"\n      },\n      onSubmit: /*#__PURE__*/function () {\n        var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, _ref2) {\n          var _response$data, _response$data2;\n\n          var setErrors, response, errorMap;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  setErrors = _ref2.setErrors;\n                  _context.next = 3;\n                  return login(values);\n\n                case 3:\n                  response = _context.sent;\n\n                  if ((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.login.errors) {\n                    errorMap = {};\n                    response.data.login.errors.forEach(function (_ref4) {\n                      var field = _ref4.field,\n                          message = _ref4.message;\n                      errorMap[field] = message;\n                    });\n                    setErrors(errorMap);\n                  } else if ((_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.login.user) {\n                    router.push(\"/\");\n                  }\n\n                case 5:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x, _x2) {\n          return _ref3.apply(this, arguments);\n        };\n      }(),\n      children: function children(_ref5) {\n        var isSubmitting = _ref5.isSubmitting;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(InputField, {\n            name: \"usernameOrEmail\",\n            placeholder: \"username or email\",\n            label: \"Username or Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Flex, {\n            mt: 4,\n            justify: \"space-between\",\n            children: [/*#__PURE__*/_jsxDEV(NextLink, {\n              href: \"/forgot-password\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                children: \"Forgot Password?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(InputField, {\n              name: \"password\",\n              placeholder: \"password\",\n              label: \"Password\",\n              type: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Button, {\n            mt: 4,\n            type: \"submit\",\n            colorScheme: \"teal\",\n            isLoading: isSubmitting,\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Login, \"q9MASCuW0N4Gqc56A9VxEfrRGWU=\", false, function () {\n  return [useRouter, useMutation];\n});\n\n_c = Login;\nexport default withUrqlClient(createUrqlClient)(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/kevin/Documents/Other/RedditClone/client/src/pages/login.tsx"],"names":["Button","Flex","Link","Form","Formik","withUrqlClient","useRouter","React","useMutation","InputField","Wrapper","createUrqlClient","NextLink","LOGIN_MUTATION","Login","router","login","usernameOrEmail","password","values","setErrors","response","data","errors","errorMap","forEach","field","message","user","push","isSubmitting"],"mappings":";;;;;;;;;;AAAA,SAAcA,MAAd,EAAsBC,IAAtB,EAA4BC,IAA5B,QAAwC,kBAAxC;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,QAA7B;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,MAA5B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,gBAAT,QAAiC,2BAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AAIA,IAAMC,cAAc,iPAApB;;AAeA,IAAMC,KAA2B,GAAG,SAA9BA,KAA8B,OAAQ;AAAA;;AAAA;;AAC1C,MAAMC,MAAM,GAAGT,SAAS,EAAxB;;AAD0C,qBAExBE,WAAW,CAACK,cAAD,CAFa;AAAA;AAAA,MAEjCG,KAFiC;;AAI1C,sBACE,QAAC,OAAD;AAAS,IAAA,OAAO,EAAC,OAAjB;AAAA,2BACE,QAAC,MAAD;AACE,MAAA,aAAa,EAAE;AAAEC,QAAAA,eAAe,EAAE,EAAnB;AAAuBC,QAAAA,QAAQ,EAAE;AAAjC,OADjB;AAEE,MAAA,QAAQ;AAAA,6EAAE,iBAAOC,MAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiBC,kBAAAA,SAAjB,SAAiBA,SAAjB;AAAA;AAAA,yBACeJ,KAAK,CAACG,MAAD,CADpB;;AAAA;AACFE,kBAAAA,QADE;;AAER,wCAAIA,QAAQ,CAACC,IAAb,mDAAI,eAAeN,KAAf,CAAqBO,MAAzB,EAAiC;AACzBC,oBAAAA,QADyB,GACU,EADV;AAG/BH,oBAAAA,QAAQ,CAACC,IAAT,CAAcN,KAAd,CAAoBO,MAApB,CAA2BE,OAA3B,CAAmC,iBAAwB;AAAA,0BAArBC,KAAqB,SAArBA,KAAqB;AAAA,0BAAdC,OAAc,SAAdA,OAAc;AACzDH,sBAAAA,QAAQ,CAACE,KAAD,CAAR,GAAkBC,OAAlB;AACD,qBAFD;AAIAP,oBAAAA,SAAS,CAACI,QAAD,CAAT;AACD,mBARD,MAQO,uBAAIH,QAAQ,CAACC,IAAb,oDAAI,gBAAeN,KAAf,CAAqBY,IAAzB,EAA+B;AACpCb,oBAAAA,MAAM,CAACc,IAAP,CAAY,GAAZ;AACD;;AAZO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAF;;AAAA;AAAA;AAAA;AAAA,SAFV;AAAA,gBAiBG;AAAA,YAAGC,YAAH,SAAGA,YAAH;AAAA,4BACC,QAAC,IAAD;AAAA,kCACE,QAAC,UAAD;AACE,YAAA,IAAI,EAAC,iBADP;AAEE,YAAA,WAAW,EAAC,mBAFd;AAGE,YAAA,KAAK,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA,mBADF,eAME,QAAC,IAAD;AAAM,YAAA,EAAE,EAAE,CAAV;AAAa,YAAA,OAAO,EAAC,eAArB;AAAA,oCACE,QAAC,QAAD;AAAU,cAAA,IAAI,EAAC,kBAAf;AAAA,qCACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,qBADF,eAIE,QAAC,UAAD;AACE,cAAA,IAAI,EAAC,UADP;AAEE,cAAA,WAAW,EAAC,UAFd;AAGE,cAAA,KAAK,EAAC,UAHR;AAIE,cAAA,IAAI,EAAC;AAJP;AAAA;AAAA;AAAA;AAAA,qBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,mBANF,eAiBE,QAAC,MAAD;AACE,YAAA,EAAE,EAAE,CADN;AAEE,YAAA,IAAI,EAAC,QAFP;AAGE,YAAA,WAAW,EAAC,MAHd;AAIE,YAAA,SAAS,EAAEA,YAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,iBADD;AAAA;AAjBH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAkDD,CAtDD;;GAAMhB,K;UACWR,S,EACGE,W;;;KAFdM,K;AAwDN,eAAeT,cAAc,CAACM,gBAAD,CAAd,CAAiCG,KAAjC,CAAf","sourcesContent":["import { Box, Button, Flex, Link } from \"@chakra-ui/react\";\nimport { Form, Formik } from \"formik\";\nimport { withUrqlClient } from \"next-urql\";\nimport { useRouter } from \"next/router\";\nimport React from \"react\";\nimport { useMutation } from \"urql\";\nimport { InputField } from \"../components/InputField\";\nimport { Wrapper } from \"../components/Wrapper\";\nimport { createUrqlClient } from \"../utils/createUrqlClient\";\nimport NextLink from \"next/link\";\n\ninterface loginProps {}\n\nconst LOGIN_MUTATION = `\nmutation Login($usernameOrEmail: String!, $password: String!) {\n  login(usernameOrEmail: $usernameOrEmail, password: $password) {\n    errors {\n      field\n      message\n    }\n    user {\n      id\n      username\n    }\n  }\n}\n`;\n\nconst Login: React.FC<loginProps> = ({}) => {\n  const router = useRouter();\n  const [, login] = useMutation(LOGIN_MUTATION);\n\n  return (\n    <Wrapper variant=\"small\">\n      <Formik\n        initialValues={{ usernameOrEmail: \"\", password: \"\" }}\n        onSubmit={async (values, { setErrors }) => {\n          const response = await login(values);\n          if (response.data?.login.errors) {\n            const errorMap: Record<string, string> = {};\n\n            response.data.login.errors.forEach(({ field, message }) => {\n              errorMap[field] = message;\n            });\n\n            setErrors(errorMap);\n          } else if (response.data?.login.user) {\n            router.push(\"/\");\n          }\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <InputField\n              name=\"usernameOrEmail\"\n              placeholder=\"username or email\"\n              label=\"Username or Email\"\n            />\n            <Flex mt={4} justify=\"space-between\">\n              <NextLink href=\"/forgot-password\">\n                <Link>Forgot Password?</Link>\n              </NextLink>\n              <InputField\n                name=\"password\"\n                placeholder=\"password\"\n                label=\"Password\"\n                type=\"password\"\n              />\n            </Flex>\n            <Button\n              mt={4}\n              type=\"submit\"\n              colorScheme=\"teal\"\n              isLoading={isSubmitting}\n            >\n              Sign In\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </Wrapper>\n  );\n};\n\nexport default withUrqlClient(createUrqlClient)(Login);\n"]},"metadata":{},"sourceType":"module"}