{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/kevin/Documents/Other/RedditClone/client/src/pages/change-password/[token].tsx\";\nimport { Box, Button, Flex, Link } from \"@chakra-ui/react\";\nimport { Formik, Form } from \"formik\";\nimport { withUrqlClient } from \"next-urql\";\nimport { useRouter } from \"next/router\";\nimport React, { useState } from \"react\";\nimport { useMutation } from \"urql\";\nimport { InputField } from \"../../components/InputField\";\nimport { Wrapper } from \"../../components/Wrapper\";\nimport { createUrqlClient } from \"../../utils/createUrqlClient\";\nimport NextLink from \"next/link\";\nconst CHANGE_PASSWORD_MUTATION = `\nmutation ChangePassword($token: String!, $newPassword: String!) {\n  changePassword(token: $token, newPassword: $newPassword) {\n    errors {\n      field\n      message\n    }\n    user {\n      id\n      username\n    }\n  }\n}\n`;\n\nconst ChangePassword = ({\n  token\n}) => {\n  const router = useRouter();\n  const [, changePassword] = useMutation(CHANGE_PASSWORD_MUTATION);\n  const {\n    0: tokenError,\n    1: setTokenError\n  } = useState(false);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    variant: \"small\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        newPassword: \"\"\n      },\n      onSubmit: async (values, {\n        setErrors\n      }) => {\n        var _response$data, _response$data2;\n\n        const response = await changePassword({\n          newPassword: values.newPassword,\n          token: token\n        });\n\n        if ((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.changePassword.errors) {\n          const errorMap = {};\n          response.data.changePassword.errors.forEach(({\n            field,\n            message\n          }) => {\n            errorMap[field] = message;\n          });\n\n          if (\"token\" in errorMap) {\n            setTokenError(true);\n          }\n\n          setErrors(errorMap);\n        } else if ((_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.changePassword.user) {\n          router.push(\"/\");\n        }\n      },\n      children: ({\n        isSubmitting\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(InputField, {\n          name: \"newPassword\",\n          placeholder: \"new password\",\n          label: \"New Password\",\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), tokenError ? /*#__PURE__*/_jsxDEV(Flex, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              children: \"This link is invalid or has expired, please visit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(NextLink, {\n              href: \"/forgot-password\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                children: \" here \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              children: \"to change your password.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this) : null, /*#__PURE__*/_jsxDEV(Button, {\n          mt: 4,\n          type: \"submit\",\n          colorScheme: \"teal\",\n          isLoading: isSubmitting,\n          children: \"Change Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\nChangePassword.getInitialProps = ({\n  query\n}) => {\n  return {\n    token: query.token\n  };\n};\n\nexport default withUrqlClient(createUrqlClient)(ChangePassword);","map":{"version":3,"sources":["/home/kevin/Documents/Other/RedditClone/client/src/pages/change-password/[token].tsx"],"names":["Box","Button","Flex","Link","Formik","Form","withUrqlClient","useRouter","React","useState","useMutation","InputField","Wrapper","createUrqlClient","NextLink","CHANGE_PASSWORD_MUTATION","ChangePassword","token","router","changePassword","tokenError","setTokenError","newPassword","values","setErrors","response","data","errors","errorMap","forEach","field","message","user","push","isSubmitting","getInitialProps","query"],"mappings":"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","sourcesContent":["import { Box, Button, Flex, Link } from \"@chakra-ui/react\";\nimport { Formik, Form } from \"formik\";\nimport { NextPage } from \"next\";\nimport { withUrqlClient } from \"next-urql\";\nimport { useRouter } from \"next/router\";\nimport React, { useState } from \"react\";\nimport { createClient, useMutation } from \"urql\";\nimport { InputField } from \"../../components/InputField\";\nimport { Wrapper } from \"../../components/Wrapper\";\nimport { createUrqlClient } from \"../../utils/createUrqlClient\";\nimport NextLink from \"next/link\";\n\nconst CHANGE_PASSWORD_MUTATION = `\nmutation ChangePassword($token: String!, $newPassword: String!) {\n  changePassword(token: $token, newPassword: $newPassword) {\n    errors {\n      field\n      message\n    }\n    user {\n      id\n      username\n    }\n  }\n}\n`;\n\nconst ChangePassword: NextPage<{ token: string }> = ({ token }) => {\n  const router = useRouter();\n  const [, changePassword] = useMutation(CHANGE_PASSWORD_MUTATION);\n  const [tokenError, setTokenError] = useState(false);\n\n  return (\n    <Wrapper variant=\"small\">\n      <Formik\n        initialValues={{ newPassword: \"\" }}\n        onSubmit={async (values, { setErrors }) => {\n          const response = await changePassword({\n            newPassword: values.newPassword,\n            token: token,\n          });\n          if (response.data?.changePassword.errors) {\n            const errorMap: Record<string, string> = {};\n\n            response.data.changePassword.errors.forEach(\n              ({ field, message }) => {\n                errorMap[field] = message;\n              }\n            );\n\n            if (\"token\" in errorMap) {\n              setTokenError(true);\n            }\n\n            setErrors(errorMap);\n          } else if (response.data?.changePassword.user) {\n            router.push(\"/\");\n          }\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <InputField\n              name=\"newPassword\"\n              placeholder=\"new password\"\n              label=\"New Password\"\n              type=\"password\"\n            />\n            {tokenError ? (\n              <Flex>\n                <Box>\n                  <Box>This link is invalid or has expired, please visit</Box>\n                  <NextLink href=\"/forgot-password\">\n                    <Link> here </Link>\n                  </NextLink>\n                  <Box>to change your password.</Box>\n                </Box>\n              </Flex>\n            ) : null}\n            <Button\n              mt={4}\n              type=\"submit\"\n              colorScheme=\"teal\"\n              isLoading={isSubmitting}\n            >\n              Change Password\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </Wrapper>\n  );\n};\n\nChangePassword.getInitialProps = ({ query }) => {\n  return {\n    token: query.token as string,\n  };\n};\n\nexport default withUrqlClient(createUrqlClient)(ChangePassword);\n"]},"metadata":{},"sourceType":"module"}